<div class="container">
<h1>@Title</h1>
    @if (pets == null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <div class="filter-bar">
            <input type="text" placeholder="Filter" name="filter" title="Filter Teable" @bind-value="FilterValue" @bind-value:event="oninput" @onkeyup="FilterPets"/>
        </div>
        <table class="bz-grid">
            <thead>
                <tr>
                    <th class="name" @onclick=@(()=> SortTable("Name"))>
                        <span>Name</span> 
                        <span>
                            <img src="/css/chevron.png" class="@NameSort"/>
                        </span> 
                    </th>
                    <th class="breed" @onclick=@(()=> SortTable("Breed"))>
                        <span>Breed</span> 
                        <span>
                            <img src="/css/chevron.png" class="@BreedSort"/>
                        </span> 
                    </th>
                    <th class="age" @onclick=@(()=> SortTable("Age"))>
                        <span>Age </span>
                        <span>
                            <img src="/css/chevron.png" class="@AgeSort"/>
                        </span> 
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var pet in visiblePets) {
                    <tr @onclick=@(()=> OpenPopup(pet))>
                        <td>@pet.Name</td>
                        <td>@pet.Breed</td>
                        <td>@pet.Age</td>
                    </tr>
                }
            </tbody>
        </table>
         <div id="background" class="@DetailOpen"></div>
        <div id="popup" class="@DetailOpen">
            <div class="header-row">
                <span>DETAILS</span>
                <span id="close-btn" @onclick=ClosePopup>X</span>
            </div>
            <div class="detail-row">
                <span class="detail-title">Name:</span>
                <span class="detail-info">@selectedRow.Name</span>
            </div>
            <div class="detail-row">
                <span class="detail-title">Breed:</span>
                <span class="detail-info">@selectedRow.Breed</span>
            </div>
            <div class="detail-row">
                <span class="detail-title">Age:</span>
                <span class="detail-info">@selectedRow.Age</span>
            </div>
        </div>
    }
</div>
@code {
    [PARAMETER] public string Title;

    [PARAMETER] Pet[] pets;

    private string FilterValue { get; set; } = "";

    private string SortedBy = "";

    private string NameSort = "none";

    private string BreedSort = "none";

    private string AgeSort = "none";

    Pet[] pets;

    Pet[] visiblePets;

    Pet selectedRow = new Pet();

    string DetailOpen = "hidden";

    private void OpenPopup( Pet pet ) 
    {
        DetailOpen = (DetailOpen == "hidden") ? "" : "hidden";
        selectedRow = pet;
    }

    private void SortTable (String column)
    {
        if (column == SortedBy) {
            IEnumerable<Pet> sortQuery =
                from pet in pets
                orderby pet.GetType().GetProperty(column).GetValue(pet, null) descending
                select pet;

                visiblePets = sortQuery.ToArray();

                if (column == "Name") {
                    NameSort = "desc";
                    BreedSort = "none";
                    AgeSort = "none";
                }


                if (column == "Breed") {
                    BreedSort = "desc";
                    NameSort = "none";
                    AgeSort = "none";
                }


                if (column == "Age") {
                    AgeSort = "desc";
                    NameSort = "none";
                    BreedSort = "none";
                }

                SortedBy = column + "-desc";

                
        }
        else {
            IEnumerable<Pet> sortQuery =
                from pet in pets
                orderby pet.GetType().GetProperty(column).GetValue(pet, null)
                select pet;

                visiblePets = sortQuery.ToArray();
                
                if (column == "Name") {
                    NameSort = "asc";
                    BreedSort = "none";
                    AgeSort = "none";
                }


                if (column == "Breed") {
                    BreedSort = "asc";
                    NameSort = "none";
                    AgeSort = "none";
                }


                if (column == "Age") {
                    AgeSort = "asc";
                    NameSort = "none";
                    BreedSort = "none";
                }

                SortedBy = column;
        }
    }

    private void ClosePopup() 
    {
        DetailOpen = "hidden";    
    }

    protected override async Task OnInitializedAsync()
    {
        visiblePets = pets = await Http.GetJsonAsync<Pet[]>("http://localhost:3000");
    }

    public void FilterPets() 
    {
        IEnumerable<Pet> petQuery =
            from pet in pets
            where pet.Name.Contains(FilterValue) || pet.Breed.Contains(FilterValue)|| pet.Age.ToString().Contains(FilterValue)
            select pet;

        visiblePets = petQuery.ToArray();

    }

    public class Pet 
    {
        public string Name { get; set; }
        public string Breed { get; set; }
        public int Age { get; set; }
    }
}